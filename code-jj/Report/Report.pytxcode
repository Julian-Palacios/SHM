=>PYTHONTEX#py#default#default#0#code#####154#
from Python_tools.core import Event
import pandas as pd

event = Event.load_event_properties('D:/SHM/code-jj/Report/Event.sav')

lugar = event.epicenter["Place"].iloc[0]
fecha = event.epicenter["Date"].iloc[0]
hora_local = event.epicenter["Local Hour"].iloc[0]
hora_UTC = event.epicenter["UTC Hour"].iloc[0]
referencia = event.epicenter["Venue"].iloc[0]
institucion = event.epicenter["Institution"].iloc[0]
latitud = event.epicenter["Latitude"].iloc[0]
longitud = event.epicenter["Longitude"].iloc[0]
profundidad =  event.epicenter["Depth"].iloc[0]
magnitud = event.epicenter["Magnitude"].iloc[0]
nstations = str(len(event.station)).zfill(2)

=>PYTHONTEX#py#default#default#1#i#####183#
lugar
=>PYTHONTEX#py#default#default#2#i#####183#
fecha
=>PYTHONTEX#py#default#default#3#i#####187#
fecha
=>PYTHONTEX#py#default#default#4#i#####187#
hora_local
=>PYTHONTEX#py#default#default#5#i#####187#
referencia
=>PYTHONTEX#py#default#default#6#i#####187#
institucion
=>PYTHONTEX#py#default#default#7#i#####196#
institucion
=>PYTHONTEX#py#default#default#8#i#####196#
institucion
=>PYTHONTEX#py#default#default#9#i#####208#
hora_local
=>PYTHONTEX#py#default#default#10#i#####208#
hora_UTC
=>PYTHONTEX#py#default#default#11#i#####208#
latitud
=>PYTHONTEX#py#default#default#12#i#####208#
longitud
=>PYTHONTEX#py#default#default#13#i#####208#
profundidad
=>PYTHONTEX#py#default#default#14#i#####208#
magnitud
=>PYTHONTEX#py#default#default#15#i#####208#
referencia
=>PYTHONTEX#py#default#default#16#i#####208#
hora_local
=>PYTHONTEX#py#default#default#17#i#####208#
hora_UTC
=>PYTHONTEX#py#default#default#18#i#####208#
latitud
=>PYTHONTEX#py#default#default#19#i#####208#
longitud
=>PYTHONTEX#py#default#default#20#i#####208#
profundidad
=>PYTHONTEX#py#default#default#21#i#####208#
magnitud
=>PYTHONTEX#py#default#default#22#i#####208#
referencia
=>PYTHONTEX#py#default#default#23#i#####230#
nstations
=>PYTHONTEX#py#default#default#24#code#####233#
pga_max = round(event.max_station["Max_pga"].iloc[0], 2)
direccion = event.max_station["Channel_max_pga"].iloc[0]
stationmax = event.max_station["Id"].iloc[0]
stationmaxubic = event.max_station["Location"].iloc[0]

cap_fig2 = "Aceleraciones máximas registrados en las estaciones acelerográficas ubicadas en la ciudad de Lima correspondientes al sismo de {0} del {1} a las {2} (hora local)".format(lugar, fecha, hora_local)

=>PYTHONTEX#py#default#default#25#i#####245#
pga_max
=>PYTHONTEX#py#default#default#26#i#####245#
direccion
=>PYTHONTEX#py#default#default#27#i#####246#
stationmax
=>PYTHONTEX#py#default#default#28#i#####246#
stationmaxubic
=>PYTHONTEX#py#default#default#29#i#####248#
nstations
=>PYTHONTEX#py#default#default#30#code#####250#

print(r"\renewcommand{\arraystretch}{1.2}")
print(r"\begin{longtable}{|c|c|c|c|}")
print(r"\caption{%s}\label{tab:tab02}\\"%(cap_fig2))
print(r"\hline")
print(r"\textbf{Código} & \textbf{Orientación} & \textbf{Ubicación (Provincia, Departamento)} & \textbf{\begin{tabular}[c]{@{}c@{}}PGA\\ (cm/s2)\end{tabular}} \\ \hline")
# print(r"\hline")
print(r"\endfirsthead")
# print(r"\hline")
# print(r"\textbf{Código} & \textbf{Orientación} & \textbf{Ubicación (Provincia, Departamento)} & \textbf{\begin{tabular}[c]{@{}c@{}}PGA\\ (cm/s2)\end{tabular}} \\ \hline")
# print(r"\hline")
print(r"\endhead")
print(r"\endfoot")
print(r"\endlastfoot")

for i in range(len(event.station)):
    print(r"\multirow{3}{*}{%s}"%(event.station["Id"].iloc[i]),r" & %s & \multirow{3}{*}{\begin{tabulary}{8cm}{@{}C@{}} %s\end{tabulary}}"%(event.station["Channels"].iloc[i][0], event.station["Location"].iloc[i]),r" & %.2f \\ \cline{2-2} \cline{4-4}"%(event.station["PGAs"].iloc[i][0]))
    print(r" & %s &  & %.2f \\ \cline{2-2} \cline{4-4}"%(event.station["Channels"].iloc[i][1], event.station["PGAs"].iloc[i][1]))
    print(r" & %s &  & %.2f \\ \hline"%(event.station["Channels"].iloc[i][2], event.station["PGAs"].iloc[i][2]))
    if (i+1) == 9 or (i-8) % 11 == 0:
        print(r"\pagebreak")
print(r"\end{longtable}")

print(r"\newpage")

=>PYTHONTEX#py#default#default#31#code#####315#
for i in range(event.station.shape[0]):
    channel = event.station.iloc[i]["Channels"]
    fig = event.station.iloc[i]["Graf Acc_Four"]
    for j in range(3):
        capth = 'Registro de Acerelaciones y Espectros de Fourier de la estación %s en dirección %s.' %(event.station["Id"].iloc[i], channel[j])
        print(r'\begin{figure}[!ht]')
        print(r"\caption{%s}"%capth)
        print(r"\label{fig: figura_%s}" %fig[j].split('.')[0])
        print(r"\centering")
        print(r"\includegraphics{%s}"%fig[j].split('.')[0])
        print(r"\end{figure}")
        print(r'\newpage')
print(r"\clearpage")
=>PYTHONTEX#py#default#default#32#i#####2#
institucion
=>PYTHONTEX:SETTINGS#
version=0.17
outputdir=pythontex-files-Report
workingdir=.
workingdirset=false
gobble=none
rerun=default
hashdependencies=default
makestderr=false
stderrfilename=full
keeptemps=none
pyfuture=default
pyconfuture=none
pygments=true
pygglobal=:GLOBAL||
fvextfile=-1
pyconbanner=none
pyconfilename=stdin
depythontex=false
pygfamily=py|python3|
pygfamily=pycon|pycon|
pygfamily=sympy|python3|
pygfamily=sympycon|pycon|
pygfamily=pylab|python3|
pygfamily=pylabcon|pycon|
